{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":392,"column":0},"end":{"row":562,"column":31},"action":"remove","lines":["@app.route('/get_recipes/<page>', methods=[\"GET\", \"POST\"])","def get_recipes(page):","    '''","    Get all recipes and display summary details in cards","    '''","    # Number of results to skip when searching recipes collection - for pagination","    skip_count = (int(page) - 1) * 6","    ","    # RESULTS USING THE SEARCH FORM","    # Args variable to get args from the form","    args = request.args.get","    ","    # Set search_word variable","    if args(str(\"search\")):","        search_word = args(str(\"search\"))","    else:","        search_word = \"\"","    ","    if not search_word:","        search_results = \"\"","    else:","        search_results = recipes_coll.find(","                {\"$text\": {\"$search\": search_word}})","    ","    # Count the search_results","    if search_results:","        search_results_count = search_results.count()","    else:","        search_results_count = 0","    ","    # FILTERED RESULTS WITH NO SEARCH","    if request.method == 'POST':","        # Get the user's submission from the filter form and put into a dictionary","        form_input = request.form.to_dict()","","        # Build the filter query","        # Error message if user doesn't select any filters before submitting form","        if len(form_input) == 0:","            flash(Markup(\"You haven't selected any filter options. Please choose a category to filter.\"))","            return redirect(url_for('get_recipes', page=1))","","        # Filter query if one option is selected from the form","        elif len(form_input) == 1:","            for k, v in form_input.items():","                cat_one = 'categories.' + k","                val_one = v.lower()","","                filter_query = {cat_one: val_one}","","        # Filter query if two options are selected from the form","        elif len(form_input) == 2:","            if 'type' in form_input and 'occasion' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.occasion'","                val_two = str(form_input['occasion']).lower()","            elif 'type' in form_input and 'cuisine' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","            elif 'type' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.main_ing'","                val_two = str(form_input['main_ing']).lower()","            elif 'occasion' in form_input and 'cuisine' in form_input:","                cat_one = 'categories.occasion'","                val_one = str(form_input['occasion']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","            elif 'occasion' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.occasion'","                val_one = str(form_input['occasion']).lower()","                cat_two = 'categories.main_ing'","                val_two = str(form_input['main_ing']).lower()","            else:","                cat_one = 'categories.cuisine'","                val_one = str(form_input['cuisine']).lower()","                cat_two = 'categories.main_ing'","                val_two = str(form_input['main_ing']).lower()","            ","            filter_query = ({'$and': [{cat_one: val_one},","                {cat_two: val_two}]})","            ","        # Filter query if three options are selected from the form","        elif len(form_input) == 3:","            if 'type' in form_input and 'occasion' in form_input and 'cuisine' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.occasion'","                val_two = str(form_input['occasion']).lower()","                cat_three = 'categories.cuisine'","                val_three = str(form_input['cuisine']).lower()","            elif 'type' in form_input and 'occasion' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.occasion'","                val_two = str(form_input['occasion']).lower()","                cat_three = 'categories.main_ing'","                val_three = str(form_input['main_ing']).lower()","            elif 'type' in form_input and 'cuisine' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","                cat_three = 'categories.main_ing'","                val_three = str(form_input['main_ing']).lower()","            else:","                cat_one = 'categories.occasion'","                val_one = str(form_input['occasion']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","                cat_three = 'categories.main_ing'","                val_three = str(form_input['main_ing']).lower()","            ","            filter_query = ({'$and': [{cat_one: val_one},","                {cat_two: val_two},","                {cat_three: val_three}]})","            ","        # Filter query if all options are selected from the form","        elif len(form_input) == 4:","            cat_one = 'categories.type'","            val_one = str(form_input['type']).lower()","            cat_two = 'categories.occasion'","            val_two = str(form_input['occasion']).lower()","            cat_three = 'categories.cuisine'","            val_three = str(form_input['cuisine']).lower()","            cat_four = 'categories.main_ing'","            val_four = str(form_input['main_ing']).lower()","            ","            filter_query = ({'$and': [{cat_one: val_one},","                {cat_two: val_two},","                {cat_three: val_three},","                {cat_four: val_four}]})","        ","        recipes = recipes_coll.find(filter_query)","        ","        # Pagination for filtered results","        paginated_recipes = recipes_coll.find(filter_query).sort([(\"likes\", -1), ","                    ('name', 1), (\"_id\", 1)]).skip(skip_count).limit(6)","        ","    # ALL RECIPES WITH NO SEARCH OR FILTERS","    else:","        recipes = recipes_coll.find()","        ","        # Pagination for all recipes","        paginated_recipes = recipes_coll.find().sort([(\"likes\", -1), ","                    ('name', 1), (\"_id\", 1)]).skip(skip_count).limit(6)","    ","    if recipes:","        recipes_count = recipes.count()","    else:","        recipes_count = 0","    ","    total_pages = int(math.ceil(recipes_count/6.0))","    ","    if recipes_count == 0:","        page = 0","        ","    return render_template(\"browse.html\",","        page=page,","        search_results=search_results,","        search_results_count=search_results_count,","        total_pages=total_pages,","        recipes=paginated_recipes,","        recipes_count=recipes_count,","        types=types_list,","        occasions=occasions_list,","        cuisines=cuisines_list,","        main_ing=main_ing_list)"],"id":2},{"start":{"row":392,"column":0},"end":{"row":578,"column":31},"action":"insert","lines":["@app.route('/get_recipes/<page>', methods=[\"GET\", \"POST\"])","def get_recipes(page):","    '''","    Get all recipes and display summary details in cards","    '''","    # Number of results to skip when searching recipes collection - for pagination","    skip_count = (int(page) - 1) * 6","    ","    # FILTERED RESULTS WITH NO SEARCH","    if request.method == 'POST':","        # Get the user's submission from the filter form and put into a dictionary","        form_input = request.form.to_dict()","","        # Build the filter query","        # Error message if user doesn't select any filters before submitting form","        if len(form_input) == 0:","            flash(Markup(\"You haven't selected any filter options. Please choose a category to filter.\"))","            return redirect(url_for('get_recipes', page=1))","","        # Filter query if one option is selected from the form","        elif len(form_input) == 1:","            for k, v in form_input.items():","                cat_one = 'categories.' + k","                val_one = v.lower()","","                filter_query = {cat_one: val_one}","","        # Filter query if two options are selected from the form","        elif len(form_input) == 2:","            if 'type' in form_input and 'occasion' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.occasion'","                val_two = str(form_input['occasion']).lower()","            elif 'type' in form_input and 'cuisine' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","            elif 'type' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.main_ing'","                val_two = str(form_input['main_ing']).lower()","            elif 'occasion' in form_input and 'cuisine' in form_input:","                cat_one = 'categories.occasion'","                val_one = str(form_input['occasion']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","            elif 'occasion' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.occasion'","                val_one = str(form_input['occasion']).lower()","                cat_two = 'categories.main_ing'","                val_two = str(form_input['main_ing']).lower()","            else:","                cat_one = 'categories.cuisine'","                val_one = str(form_input['cuisine']).lower()","                cat_two = 'categories.main_ing'","                val_two = str(form_input['main_ing']).lower()","            ","            filter_query = ({'$and': [{cat_one: val_one},","                {cat_two: val_two}]})","            ","        # Filter query if three options are selected from the form","        elif len(form_input) == 3:","            if 'type' in form_input and 'occasion' in form_input and 'cuisine' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.occasion'","                val_two = str(form_input['occasion']).lower()","                cat_three = 'categories.cuisine'","                val_three = str(form_input['cuisine']).lower()","            elif 'type' in form_input and 'occasion' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.occasion'","                val_two = str(form_input['occasion']).lower()","                cat_three = 'categories.main_ing'","                val_three = str(form_input['main_ing']).lower()","            elif 'type' in form_input and 'cuisine' in form_input and 'main_ing' in form_input:","                cat_one = 'categories.type'","                val_one = str(form_input['type']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","                cat_three = 'categories.main_ing'","                val_three = str(form_input['main_ing']).lower()","            else:","                cat_one = 'categories.occasion'","                val_one = str(form_input['occasion']).lower()","                cat_two = 'categories.cuisine'","                val_two = str(form_input['cuisine']).lower()","                cat_three = 'categories.main_ing'","                val_three = str(form_input['main_ing']).lower()","            ","            filter_query = ({'$and': [{cat_one: val_one},","                {cat_two: val_two},","                {cat_three: val_three}]})","            ","        # Filter query if all options are selected from the form","        elif len(form_input) == 4:","            cat_one = 'categories.type'","            val_one = str(form_input['type']).lower()","            cat_two = 'categories.occasion'","            val_two = str(form_input['occasion']).lower()","            cat_three = 'categories.cuisine'","            val_three = str(form_input['cuisine']).lower()","            cat_four = 'categories.main_ing'","            val_four = str(form_input['main_ing']).lower()","            ","            filter_query = ({'$and': [{cat_one: val_one},","                {cat_two: val_two},","                {cat_three: val_three},","                {cat_four: val_four}]})","        ","        recipes = recipes_coll.find(filter_query)","        ","        # Pagination for filtered results","        paginated_recipes = recipes_coll.find(filter_query).sort([(\"likes\", -1), ","                    ('name', 1), (\"_id\", 1)]).skip(skip_count).limit(6)","        ","    # ALL RECIPES WITH NO SEARCH OR FILTERS","    else:","        recipes = recipes_coll.find()","        ","        # Pagination for all recipes","        paginated_recipes = recipes_coll.find().sort([(\"likes\", -1), ","                    ('name', 1), (\"_id\", 1)]).skip(skip_count).limit(6)","    ","    if recipes:","        recipes_count = recipes.count()","    else:","        recipes_count = 0","    ","    total_pages = int(math.ceil(recipes_count/6.0))","    ","    if recipes_count == 0:","        page = 0","    ","    # RESULTS USING THE SEARCH FORM","    # Args variable to get args from the form","    args = request.args.get","    ","    # Set search_word variable","    if args(str(\"search\")):","        search_word = args(str(\"search\"))","    else:","        search_word = \"\"","    ","    # Number of results to skip when searching recipes collection - for pagination","    search_page = 1","    skip_search_count = (int(search_page) - 1) * 6","    ","    if not search_word:","        search_results = \"\"","        paginated_search_results = \"\"","    else:","        search_results = recipes_coll.find(","                {\"$text\": {\"$search\": search_word}})","        paginated_search_results = recipes_coll.find(","            {\"$text\": {\"$search\": search_word}}).sort([(\"likes\", -1), ","            ('name', 1), (\"_id\", 1)]).skip(skip_search_count).limit(6)","    ","    # Count the search_results","    if search_results:","        search_results_count = search_results.count()","    else:","        search_results_count = 0","    ","    total_search_pages = int(math.ceil(search_results_count/6.0))","    ","    if search_results_count == 0:","        search_page=0","    ","    return render_template(\"browse.html\",","        page=page,","        recipes=paginated_recipes,","        recipes_count=recipes_count,","        search_results=search_results,","        search_results_count=search_results_count,","        paginated_search_results=paginated_search_results,","        total_pages=total_pages,","        search_page=search_page,","        total_search_pages=total_search_pages,","        types=types_list,","        occasions=occasions_list,","        cuisines=cuisines_list,","        main_ing=main_ing_list)"]}]]},"ace":{"folds":[],"scrolltop":7706,"scrollleft":0,"selection":{"start":{"row":569,"column":38},"end":{"row":569,"column":38},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":549,"state":"start","mode":"ace/mode/python"}},"timestamp":1564756363054,"hash":"78f7d263cbc3b7ddd39329c01135438d6363d493"}